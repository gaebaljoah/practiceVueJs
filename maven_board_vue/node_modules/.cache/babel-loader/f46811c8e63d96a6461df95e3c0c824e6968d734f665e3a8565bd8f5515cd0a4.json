{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"글쓰기 영역\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_createTextVNode(\"제목 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    style: {\n      \"width\": \"300px\"\n    },\n    placeholder: \"제목을 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_createTextVNode(\"내용 : \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.content = $event),\n    style: {\n      \"width\": \"300px\",\n      \"height\": \"200px\"\n    },\n    placeholder: \"내용을 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.regPost && $options.regPost(...args)),\n    type: \"button\"\n  }, \"저장\")])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","$data","title","$event","style","placeholder","content","onClick","_cache","args","$options","regPost"],"sources":["C:\\practice\\Practice_Vue.js\\maven_board_vue\\src\\views\\RegPostComponent.vue"],"sourcesContent":["<template>\r\n    <div> \r\n        <h1>글쓰기 영역</h1>\r\n        <div>제목 : <input type=\"text\" v-model=\"title\" style=\"width: 300px;\" placeholder=\"제목을 입력해주세요.\"/></div>\r\n        <div>내용 : <textarea v-model=\"content\" style=\"width: 300px; height:200px;\" placeholder=\"내용을 입력해주세요.\"></textarea></div>\r\n        <div><button @click=\"regPost\" type=\"button\">저장</button></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios' ;\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      title: '',\r\n      content: ''\r\n    };\r\n  },\r\n  setup(){\r\n\r\n  },\r\n  beforeCreate() {console.log('beforeCreate()')},\r\n  created() {console.log('created()')},\r\n  beforeMount() {console.log('beforeMount()')},\r\n  mounted() {console.log('mounted()')},\r\n  beforeUpdate() {console.log('beforeUpdate()')},\r\n  updated() {console.log('updated()')},\r\n  beforeUnmount() {console.log('beforeUnmount()')},\r\n  unmounted() {console.log('unmounted()')},\r\n  methods: {\r\n    async regPost(){\r\n        let freeBoardDto = {\r\n            \"title\" : this.title,\r\n            \"content\" : this.content,\r\n        }\r\n        const result = await axios.post(\"http://localhost:6005/insertFreeBoard.ino\",{freeBoardDto});\r\n        console.log(\"result..?\"+result.toString());\r\n        console.log(result.data); // 서버에서 받은 데이터\r\n        console.log(result.status); // HTTP 상태 코드\r\n        console.log(result.statusText); // HTTP 상태 메시지\r\n        console.log(result.headers); // 응답 헤더\r\n        console.log(result.config); // Axios 요청에 사용된 설정 객체\r\n        if (result == \"1\") {\r\n            alert(\"insert clear\")\r\n        }\r\n\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";gCAEQA,mBAAA,CAAe,YAAX,QAAM;;;uBADdC,mBAAA,CAKM,cAJFC,UAAe,EACfF,mBAAA,CAAoG,c,iBAA/F,OAAK,G,gBAAAA,mBAAA,CAAoF;IAA7EG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,KAAqB,EAArB;MAAA;IAAA,CAAqB;IAACC,WAAW,EAAC;iDAAzCJ,KAAA,CAAAC,KAAK,E,KAC3CL,mBAAA,CAAqH,c,iBAAhH,OAAK,G,gBAAAA,mBAAA,CAAqG;+DAAlFI,KAAA,CAAAK,OAAO,GAAAH,MAAA;IAAEC,KAAmC,EAAnC;MAAA;MAAA;IAAA,CAAmC;IAACC,WAAW,EAAC;iDAAzDJ,KAAA,CAAAK,OAAO,E,KACpCT,mBAAA,CAA6D,cAAxDA,mBAAA,CAAkD;IAAzCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAET,IAAI,EAAC;KAAS,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}