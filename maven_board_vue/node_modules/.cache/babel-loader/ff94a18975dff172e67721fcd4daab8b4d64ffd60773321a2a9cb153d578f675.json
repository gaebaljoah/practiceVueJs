{"ast":null,"code":"export default {\n  name: PaginationComponent,\n  data() {\n    return {\n      page: 1,\n      rowCnt: 10,\n      totalCnt: 1,\n      lastPage: 1\n      // 추가적으로 필요한 데이터가 있다면 여기에 추가\n    };\n  },\n\n  computed: {\n    // 현재 페이지를 기준으로 표시할 페이지 번호 목록 계산\n    visiblePageNumbers() {\n      const blockStart = Math.max(1, this.page - Math.floor(this.blockCnt / 2));\n      const blockEnd = Math.min(this.lastPage, blockStart + this.blockCnt - 1);\n      return Array.from({\n        length: blockEnd - blockStart + 1\n      }, (_, index) => blockStart + index);\n    }\n  },\n  methods: {\n    // 이전 페이지로 이동\n    prevPage() {\n      if (this.page > 1) {\n        this.page--;\n      }\n    },\n    // 다음 페이지로 이동\n    nextPage() {\n      if (this.page < this.lastPage) {\n        this.page++;\n      }\n    },\n    // 특정 페이지로 이동\n    goToPage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.lastPage) {\n        this.page = pageNumber;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","PaginationComponent","data","page","rowCnt","totalCnt","lastPage","computed","visiblePageNumbers","blockStart","Math","max","floor","blockCnt","blockEnd","min","Array","from","length","_","index","methods","prevPage","nextPage","goToPage","pageNumber"],"sources":["C:\\practice\\Practice_Vue.js\\maven_board_vue\\src\\views\\layout\\PaginationComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 페이지 정보 표시 -->\r\n    <div>\r\n      <p>Page: {{ page }}</p>\r\n      <p>Row Count: {{ rowCnt }}</p>\r\n      <p>Total Count: {{ totalCnt }}</p>\r\n    </div>\r\n\r\n    <!-- 이전 페이지 버튼 -->\r\n    <button @click=\"prevPage\" :disabled=\"page === 1\">Previous Page</button>\r\n\r\n    <!-- 페이지 번호 표시 -->\r\n    <div v-for=\"pageNumber in visiblePageNumbers\" :key=\"pageNumber\">\r\n      <button @click=\"goToPage(pageNumber)\">{{ pageNumber }}</button>\r\n    </div>\r\n\r\n    <!-- 다음 페이지 버튼 -->\r\n    <button @click=\"nextPage\" :disabled=\"page === lastPage\">Next Page</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name:PaginationComponent,\r\n  data() {\r\n    return {\r\n      page: 1,\r\n      rowCnt: 10,\r\n      totalCnt: 1,\r\n      lastPage: 1,\r\n      // 추가적으로 필요한 데이터가 있다면 여기에 추가\r\n    };\r\n  },\r\n  computed: {\r\n    // 현재 페이지를 기준으로 표시할 페이지 번호 목록 계산\r\n    visiblePageNumbers() {\r\n      const blockStart = Math.max(1, this.page - Math.floor(this.blockCnt / 2));\r\n      const blockEnd = Math.min(this.lastPage, blockStart + this.blockCnt - 1);\r\n      return Array.from({ length: blockEnd - blockStart + 1 }, (_, index) => blockStart + index);\r\n    },\r\n  },\r\n  methods: {\r\n    // 이전 페이지로 이동\r\n    prevPage() {\r\n      if (this.page > 1) {\r\n        this.page--;\r\n      }\r\n    },\r\n    // 다음 페이지로 이동\r\n    nextPage() {\r\n      if (this.page < this.lastPage) {\r\n        this.page++;\r\n      }\r\n    },\r\n    // 특정 페이지로 이동\r\n    goToPage(pageNumber) {\r\n      if (pageNumber >= 1 && pageNumber <= this.lastPage) {\r\n        this.page = pageNumber;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일링이 필요한 경우 여기에 추가 */\r\n</style>"],"mappings":"AAuBA,eAAe;EACbA,IAAI,EAACC,mBAAmB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE;MACV;IACF,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE;IACR;IACAC,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,UAAS,GAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACR,IAAG,GAAIO,IAAI,CAACE,KAAK,CAAC,IAAI,CAACC,QAAO,GAAI,CAAC,CAAC,CAAC;MACzE,MAAMC,QAAO,GAAIJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACT,QAAQ,EAAEG,UAAS,GAAI,IAAI,CAACI,QAAO,GAAI,CAAC,CAAC;MACxE,OAAOG,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEJ,QAAO,GAAIL,UAAS,GAAI;MAAE,CAAC,EAAE,CAACU,CAAC,EAAEC,KAAK,KAAKX,UAAS,GAAIW,KAAK,CAAC;IAC5F;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACnB,IAAG,GAAI,CAAC,EAAE;QACjB,IAAI,CAACA,IAAI,EAAE;MACb;IACF,CAAC;IACD;IACAoB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACpB,IAAG,GAAI,IAAI,CAACG,QAAQ,EAAE;QAC7B,IAAI,CAACH,IAAI,EAAE;MACb;IACF,CAAC;IACD;IACAqB,QAAQA,CAACC,UAAU,EAAE;MACnB,IAAIA,UAAS,IAAK,KAAKA,UAAS,IAAK,IAAI,CAACnB,QAAQ,EAAE;QAClD,IAAI,CAACH,IAAG,GAAIsB,UAAU;MACxB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}