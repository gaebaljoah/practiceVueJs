{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"background-color\": \"#dedede\",\n    \"height\": \"700px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"게시글 작성\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", null, [_createTextVNode(\"성함 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    style: {\n      \"width\": \"300px\"\n    },\n    placeholder: \"성함을 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createElementVNode(\"div\", null, [_createTextVNode(\"제목 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.title = $event),\n    style: {\n      \"width\": \"300px\"\n    },\n    placeholder: \"제목을 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_createTextVNode(\"내용 : \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.content = $event),\n    style: {\n      \"width\": \"300px\",\n      \"height\": \"200px\"\n    },\n    placeholder: \"내용을 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.regPost && $options.regPost(...args)),\n    type: \"button\"\n  }, \"저장\")])]);\n}","map":{"version":3,"names":["style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","$data","name","$event","placeholder","title","content","onClick","_cache","args","$options","regPost"],"sources":["C:\\practice\\Practice_Vue.js\\maven_board_vue\\src\\views\\RegPostComponent.vue"],"sourcesContent":["<template>\r\n    <div style=\"background-color:#dedede; height:700px;\"> \r\n        <h1>게시글 작성</h1>\r\n        <div>성함 : <input type=\"text\" v-model=\"name\" style=\"width: 300px;\" placeholder=\"성함을 입력해주세요.\"/></div>\r\n        <div>제목 : <input type=\"text\" v-model=\"title\" style=\"width: 300px;\" placeholder=\"제목을 입력해주세요.\"/></div>\r\n        <div>내용 : <textarea v-model=\"content\" style=\"width: 300px; height:200px;\" placeholder=\"내용을 입력해주세요.\"></textarea></div>\r\n        <div><button @click=\"regPost\" type=\"button\">저장</button></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios' ;\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      name: '',\r\n      title: '',\r\n      content: ''\r\n    };\r\n  },\r\n  setup(){\r\n\r\n  },\r\n  methods: {\r\n    // regPost(){\r\n\r\n    //   const freeBoardDtoJson = {\r\n    //     'name' : this.name,\r\n    //     'title' : this.title,\r\n    //     'content' : this.content,\r\n    //   }\r\n    //   const freeBoardDto = JSON.stringify(freeBoardDtoJson)   \r\n    //   console.log(freeBoardDto);\r\n    //   //axios는 'data'를 query로 변환해주지 않는다고 한다. 'data'란 개발자 도구에서 봤던 dictionary를 말한다. \r\n    //   //axios에서 매개변수로 변환해주지 않으니 스프링에서는 freeBoardDtoJson라는 매개변수를 못받았던 것이다!\r\n    //   //axios.post('http://localhost:6005/insertFreeBoard.ino',null,{params : freeBoardDtoJson}) //매개변수에 일치 시킬 거면 이렇게 사용,\r\n    //   //아래는 requestBody 요청 본문에 데이터를 삽입하는 방법\r\n    //   axios.post('http://localhost:6005/insertFreeBoard.ino',freeBoardDtoJson)\r\n    //   .then(function(response){\r\n    //     if(response.status==200){\r\n    //       alert(\"게시글 작성이 완료되었습니다\");\r\n    //       console.log(response);\r\n    //       this.$router.push({ name: 'Home' });\r\n    //       }\r\n    //     }\r\n    //   )\r\n    // }\r\n\r\n    async regPost(){\r\n      const freeBoardDtoJson = {\r\n        'name' : this.name,\r\n        'title' : this.title,\r\n        'content' : this.content,\r\n      }\r\n      //axios는 'data'를 query로 변환해주지 않는다고 한다. 'data'란 개발자 도구에서 봤던 dictionary를 말한다. \r\n      //axios에서 매개변수로 변환해주지 않으니 스프링에서는 freeBoardDtoJson라는 매개변수를 못받았던 것이다!\r\n      //axios.post('http://localhost:6005/insertFreeBoard.ino',null,{params : freeBoardDtoJson}) //매개변수에 일치 시킬 거면 이렇게 사용,\r\n      //아래는 requestBody 요청 본문에 데이터를 삽입하는 방법\r\n      const res = await axios.post('http://localhost:6005/insertFreeBoard.ino',freeBoardDtoJson)\r\n      if(res.status==200){\r\n        alert(\"게시글 작성이 완료되었습니다\");\r\n        console.log(res);\r\n        this.$router.push({ name: 'Home' });\r\n        }\r\n      }\r\n\r\n\r\n  }\r\n}\r\n</script>"],"mappings":";;EACSA,KAA+C,EAA/C;IAAA;IAAA;EAAA;AAA+C;gCAChDC,mBAAA,CAAe,YAAX,QAAM;;;uBADdC,mBAAA,CAMM,OANNC,UAMM,GALFC,UAAe,EACfH,mBAAA,CAAmG,c,iBAA9F,OAAK,G,gBAAAA,mBAAA,CAAmF;IAA5EI,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAER,KAAqB,EAArB;MAAA;IAAA,CAAqB;IAACS,WAAW,EAAC;iDAAxCH,KAAA,CAAAC,IAAI,E,KAC1CN,mBAAA,CAAoG,c,iBAA/F,OAAK,G,gBAAAA,mBAAA,CAAoF;IAA7EI,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAI,KAAK,GAAAF,MAAA;IAAER,KAAqB,EAArB;MAAA;IAAA,CAAqB;IAACS,WAAW,EAAC;iDAAzCH,KAAA,CAAAI,KAAK,E,KAC3CT,mBAAA,CAAqH,c,iBAAhH,OAAK,G,gBAAAA,mBAAA,CAAqG;+DAAlFK,KAAA,CAAAK,OAAO,GAAAH,MAAA;IAAER,KAAmC,EAAnC;MAAA;MAAA;IAAA,CAAmC;IAACS,WAAW,EAAC;iDAAzDH,KAAA,CAAAK,OAAO,E,KACpCV,mBAAA,CAA6D,cAAxDA,mBAAA,CAAkD;IAAzCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAET,IAAI,EAAC;KAAS,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}