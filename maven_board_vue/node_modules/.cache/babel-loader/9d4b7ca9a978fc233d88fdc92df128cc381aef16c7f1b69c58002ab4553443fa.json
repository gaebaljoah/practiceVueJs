{"ast":null,"code":"import axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    return {\n      title: '',\n      content: ''\n    };\n  },\n  setup() {},\n  beforeCreate() {\n    console.log('beforeCreate()');\n  },\n  created() {\n    console.log('created()');\n  },\n  beforeMount() {\n    console.log('beforeMount()');\n  },\n  mounted() {\n    console.log('mounted()');\n  },\n  beforeUpdate() {\n    console.log('beforeUpdate()');\n  },\n  updated() {\n    console.log('updated()');\n  },\n  beforeUnmount() {\n    console.log('beforeUnmount()');\n  },\n  unmounted() {\n    console.log('unmounted()');\n  },\n  methods: {\n    async regPost() {\n      let freeBoardDto = {\n        \"title\": this.title,\n        \"content\": this.content\n      };\n      const result = await axios.post(\"http://localhost:6005/insertFreeBoard.ino\", {\n        freeBoardDto\n      });\n      console.log(\"result..?\" + result.toString());\n      console.log(result.data); // 서버에서 받은 데이터\n      console.log(result.status); // HTTP 상태 코드\n      console.log(result.statusText); // HTTP 상태 메시지\n      console.log(result.headers); // 응답 헤더\n      console.log(result.config); // Axios 요청에 사용된 설정 객체\n      if (result.data == \"1\") {\n        alert(\"insert clear\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","components","data","title","content","setup","beforeCreate","console","log","created","beforeMount","mounted","beforeUpdate","updated","beforeUnmount","unmounted","methods","regPost","freeBoardDto","result","post","toString","status","statusText","headers","config","alert"],"sources":["C:\\practice\\Practice_Vue.js\\maven_board_vue\\src\\views\\RegPostComponent.vue"],"sourcesContent":["<template>\r\n    <div> \r\n        <h1>글쓰기 영역</h1>\r\n        <div>제목 : <input type=\"text\" v-model=\"title\" style=\"width: 300px;\" placeholder=\"제목을 입력해주세요.\"/></div>\r\n        <div>내용 : <textarea v-model=\"content\" style=\"width: 300px; height:200px;\" placeholder=\"내용을 입력해주세요.\"></textarea></div>\r\n        <div><button @click=\"regPost\" type=\"button\">저장</button></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios' ;\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      title: '',\r\n      content: ''\r\n    };\r\n  },\r\n  setup(){\r\n\r\n  },\r\n  beforeCreate() {console.log('beforeCreate()')},\r\n  created() {console.log('created()')},\r\n  beforeMount() {console.log('beforeMount()')},\r\n  mounted() {console.log('mounted()')},\r\n  beforeUpdate() {console.log('beforeUpdate()')},\r\n  updated() {console.log('updated()')},\r\n  beforeUnmount() {console.log('beforeUnmount()')},\r\n  unmounted() {console.log('unmounted()')},\r\n  methods: {\r\n    async regPost(){\r\n        let freeBoardDto = {\r\n            \"title\" : this.title,\r\n            \"content\" : this.content,\r\n        }\r\n        const result = await axios.post(\"http://localhost:6005/insertFreeBoard.ino\",{freeBoardDto});\r\n        console.log(\"result..?\"+result.toString());\r\n        console.log(result.data); // 서버에서 받은 데이터\r\n        console.log(result.status); // HTTP 상태 코드\r\n        console.log(result.statusText); // HTTP 상태 메시지\r\n        console.log(result.headers); // 응답 헤더\r\n        console.log(result.config); // Axios 요청에 사용된 설정 객체\r\n        if (result.data == \"1\") {\r\n            alert(\"insert clear\")\r\n        }\r\n\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AASA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACbC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAE,CAEP,CAAC;EACDC,YAAYA,CAAA,EAAG;IAACC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAAA,CAAC;EAC9CC,OAAOA,CAAA,EAAG;IAACF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAAA,CAAC;EACpCE,WAAWA,CAAA,EAAG;IAACH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAAA,CAAC;EAC5CG,OAAOA,CAAA,EAAG;IAACJ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAAA,CAAC;EACpCI,YAAYA,CAAA,EAAG;IAACL,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAAA,CAAC;EAC9CK,OAAOA,CAAA,EAAG;IAACN,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAAA,CAAC;EACpCM,aAAaA,CAAA,EAAG;IAACP,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAAA,CAAC;EAChDO,SAASA,CAAA,EAAG;IAACR,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAAA,CAAC;EACxCQ,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAE;MACX,IAAIC,YAAW,GAAI;QACf,OAAM,EAAI,IAAI,CAACf,KAAK;QACpB,SAAQ,EAAI,IAAI,CAACC;MACrB;MACA,MAAMe,MAAK,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,2CAA2C,EAAC;QAACF;MAAY,CAAC,CAAC;MAC3FX,OAAO,CAACC,GAAG,CAAC,WAAW,GAACW,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC1Cd,OAAO,CAACC,GAAG,CAACW,MAAM,CAACjB,IAAI,CAAC,EAAE;MAC1BK,OAAO,CAACC,GAAG,CAACW,MAAM,CAACG,MAAM,CAAC,EAAE;MAC5Bf,OAAO,CAACC,GAAG,CAACW,MAAM,CAACI,UAAU,CAAC,EAAE;MAChChB,OAAO,CAACC,GAAG,CAACW,MAAM,CAACK,OAAO,CAAC,EAAE;MAC7BjB,OAAO,CAACC,GAAG,CAACW,MAAM,CAACM,MAAM,CAAC,EAAE;MAC5B,IAAIN,MAAM,CAACjB,IAAG,IAAK,GAAG,EAAE;QACpBwB,KAAK,CAAC,cAAc;MACxB;IAEJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}