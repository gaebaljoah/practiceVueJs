{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 페이지 정보 표시 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"Page: \" + _toDisplayString($data.page), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Row Count: \" + _toDisplayString($data.rowCnt), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Total Count: \" + _toDisplayString($data.totalCnt), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createElementVNode","_toDisplayString","$data","page","rowCnt","totalCnt"],"sources":["C:\\practice\\Practice_Vue.js\\maven_board_vue\\src\\views\\layout\\PaginationComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 페이지 정보 표시 -->\r\n    <div>\r\n      <p>Page: {{ page }}</p>\r\n      <p>Row Count: {{ rowCnt }}</p>\r\n      <p>Total Count: {{ totalCnt }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      page: 1,\r\n      rowCnt: 10,\r\n      totalCnt: 1,\r\n      lastPage: 1,\r\n      // 추가적으로 필요한 데이터가 있다면 여기에 추가\r\n    };\r\n  },\r\n  computed: {\r\n    // 현재 페이지를 기준으로 표시할 페이지 번호 목록 계산\r\n    visiblePageNumbers() {\r\n      const blockStart = Math.max(1, this.page - Math.floor(this.blockCnt / 2));\r\n      const blockEnd = Math.min(this.lastPage, blockStart + this.blockCnt - 1);\r\n      return Array.from({ length: blockEnd - blockStart + 1 }, (_, index) => blockStart + index);\r\n    },\r\n  },\r\n  methods: {\r\n    // 이전 페이지로 이동\r\n    prevPage() {\r\n      if (this.page > 1) {\r\n        this.page--;\r\n      }\r\n    },\r\n    // 다음 페이지로 이동\r\n    nextPage() {\r\n      if (this.page < this.lastPage) {\r\n        this.page++;\r\n      }\r\n    },\r\n    // 특정 페이지로 이동\r\n    goToPage(pageNumber) {\r\n      if (pageNumber >= 1 && pageNumber <= this.lastPage) {\r\n        this.page = pageNumber;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일링이 필요한 경우 여기에 추가 */\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAOM,cANJC,mBAAA,eAAkB,EAClBC,mBAAA,CAIM,cAHJA,mBAAA,CAAuB,WAApB,QAAM,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,kBAChBH,mBAAA,CAA8B,WAA3B,aAAW,GAAAC,gBAAA,CAAGC,KAAA,CAAAE,MAAM,kBACvBJ,mBAAA,CAAkC,WAA/B,eAAa,GAAAC,gBAAA,CAAGC,KAAA,CAAAG,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}